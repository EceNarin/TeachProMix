package JavaProjects.P09_kitapYonetimi;

	public class EklenenKitaplar {
		
		public int kitapNo;
		public String kitapAdı;
		public String yazar;
		public int kitapFiyatı;
		
		
		public EklenenKitaplar() {
			
		}
		
		
		public EklenenKitaplar (int kitapNo, String kitapAdı, String yazar, int kitapFiyatı) {
			this.kitapNo=Kitapcı_KitapEkle.count;
			this.kitapAdı=kitapAdı;
			this.yazar=yazar;
			this.kitapFiyatı=kitapFiyatı;
		}


	}
	package JavaProjects.P09_kitapYonetimi;

public class EklenenKitaplar {
	
	public int kitapNo;
	public String kitapAdı;
	public String yazar;
	public int kitapFiyatı;
	
	
	public EklenenKitaplar() {
		
	}
	
	
	public EklenenKitaplar (int kitapNo, String kitapAdı, String yazar, int kitapFiyatı) {
		this.kitapNo=Kitapcı_KitapEkle.count;
		this.kitapAdı=kitapAdı;
		this.yazar=yazar;
		this.kitapFiyatı=kitapFiyatı;
	}


}/*
		 * ==================== PROJE==============================
		 * bir kitapci icin program yazalim kitap no 1000'den baslayacak sirali no olsun program
		 * baslayinca menu isminde bir method calissin
		 * 1-kitap ekle
		 * 2-numara ile kitap goruntule//kitap ismi ve kitap adi
		 * 3-bilgi ile kitap goruntule
		 * 4-numara ile kitap sil
		 * 5-tum kitaplari listele
		 * 6-cikis
		 ************************************
		 * 1.olarak her kitaba ait kitap no olacak, sonra kitap adi olacak, buna ait
		 * yazar adi olacak ve kitap fiyati olacak bu bilgilerin tutulacagi bir yer
		 * olmali yani bir list'te tutmamiz gerek
		 * 2-kitap numarasi 1000'den
		 * baslamali,her kitap eklendiginde bir artacagi icin sayac gibi dusunulebilinir
		 * count=1000; menu isminde bir method olusturmaliyim,
		 * 3-kitap ekle diye bir
		 * method olusturmliyim,bu method farkli bir classda
		 * 4-kullanicidn kitap adi
		 * yazar adi ve fiyat bilgileri istenmeli
		 */
		// Kitapcı_KitapEkle kitap = new Kitapcı_KitapEkle();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		/*
Given an array length 1 or more of ints, return the difference between the largest and smallest values in the array.

Note: the built-in Math.min(v1, v2) and Math.max(v1, v2) methods return the smaller or larger of two values.


bigDiff([10, 3, 5, 6]) → 10-3 result = 7
bigDiff([7, 2, 10, 9]) → 10-2 result = 8
bigDiff([2, 10, 7, 1]) → 10-1 result = 9

return type is int
 */

 /*

  Bir veya daha fazla öğe iceren int array verildiğinde, arraydeki en büyük ve en küçük öğeler arasındaki farkı return edin.
  Not: the built-in    Math.min(v1, v2) ve   Math.max(v1, v2) methodları en küçük ve en büyük öğeleri return eder.


bigDiff([10, 3, 5, 6]) → 10-3 result = 7
bigDiff([7, 2, 10, 9]) → 10-2 result = 8
bigDiff([2, 10, 7, 1]) → 10-1 result = 9

return tipi  int dir
 */

public static void main(String[] args) {

    Scanner scan = new Scanner(System.in);

    String myStr = scan.nextLine();

    String[] strArr = myStr.split(" ");
    int[] useThisArray;
    useThisArray = new int[strArr.length];

    for (int i = 0; i < strArr.length; i++) {

        int num = Integer.parseInt(strArr[i]);
        useThisArray[i] = num;

    }

    // Your code start here. Don't remove or change anything before this line. Your array is -> useThisArray in line 27
    // Kodlamaya burdan başla.Bu satırdan önceki satırlarda hiçbirşeyi kaldırma ve degiştirme. Kullanacağın array 27.ci satırda  --> useThisArray

    
    int min = Integer.MIN_VALUE;
    for (int i = 0; i < useThisArray.length; i++) {

        if (useThisArray[i] < min) {
            min = useThisArray[i];

        }
    }
    int max = Integer.MAX_VALUE;
    for (int i = 0; i < useThisArray.length; i++) {

        if (useThisArray[i] > max) {
            max = useThisArray[i];
        }
    }
    int result = max - min;
    System.out.println(result);